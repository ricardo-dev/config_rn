
######################## arquivo base

import React, {Component} from 'react';
import {StyleSheet, Text, View} from 'react-native'; 

class nomeClass extends Component {

	render(){
		return(
			<View>
				<Text>nomeClass View</Text>
 			</View>
		);	
	}

}

const styles = StyleSheet.create({
	container:{
		flex:1,
		alignItems:'center',
		justifyContent:'center',
		backgroundColor:'#f2f2f2',
	},
	text:{
		fontSize:18,
		color:'#000',
	},
});

export default nomeClass;

######################## validação de telefone

verificaNumero = ()=>{
	this.setState({Empty:false, valid:true});
	const numero = this.state.telefone;

	if(numero.length != 11){
		this.setState({Empty:true});
	} else if(!this.validaTelefone(numero)){
		this.setState({valid:false})
	}else{
		(...)
	}
}

validaTelefone = (numero) => {
	if(numero[2] === '9' && (numero[3]==='9' || numero[3]==='8'))
		return true;
	else
		return false;
}

######################## validação de email (ER)

validate = (text) => {
	let reg = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/ ;
	if(reg.test(text) === false) {
		return false;
	}
	else {
		return true;
	}
}


######################## validação de CPF

validaCPF = (cpf) => {
	cpf = cpf.replace('.','');
	cpf = cpf.replace('.','');
	cpf = cpf.replace('.','');
	cpf = cpf.replace('-','');
   var numeros, digitos, soma, i, resultado, digitos_iguais;
   digitos_iguais = 1;
   if (cpf.length < 11)
         return false;
   for (i = 0; i < cpf.length - 1; i++)
         if (cpf.charAt(i) != cpf.charAt(i + 1)){
               digitos_iguais = 0;
               break;
         }
   if (!digitos_iguais){
         numeros = cpf.substring(0,9);
         digitos = cpf.substring(9);
         soma = 0;
         for (i = 10; i > 1; i--)
               soma += numeros.charAt(10 - i) * i;
         resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
         if (resultado != digitos.charAt(0))
               return false;
         numeros = cpf.substring(0,10);
         soma = 0;
         for (i = 11; i > 1; i--)
               soma += numeros.charAt(11 - i) * i;
         resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
         if (resultado != digitos.charAt(1))
               return false;
         return true;
    }
    else
       return false;
  }



